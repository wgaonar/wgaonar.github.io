I"Î<p>En este post muestro el circuito, el diagrama de flujo, el c√≥digo y la implementaci√≥n de un programa en lenguaje ensamblador en el microcontrolador microcontrolador <a href="http://ww1.microchip.com/downloads/en/devicedoc/41291f.pdf">PIC 16F886</a> para realizar una comparaci√≥n de n√∫meros utilizando los bits <strong>Z</strong> y <strong>CARRY</strong> del registro <strong>STATUS</strong>.</p>

<p>EL prop√≥sito es aplicar las instrucciones de prueba de bits para poder realizar las comparaciones:</p>

<ol>
  <li><strong>BTFSS</strong></li>
  <li><strong>BTFSC</strong></li>
</ol>

<p>La implementaci√≥n consta de 4 entradas en los bits menos significativos del <em>puerto A</em> para introducir el n√∫mero de referencia y con el cual se desea trabajar. Este n√∫mero estar√° en un rango de 0 a 15. Como resultado se dispone de 4 posibles condiciones de salida a trav√©s de los bits RB0 - RB3:</p>

<ol>
  <li>El n√∫mero es igual a 9</li>
  <li>El n√∫mero es mayor a 12</li>
  <li>El n√∫mero es menor a 5</li>
  <li>El n√∫mero se encuentra entre 3 y 8</li>
</ol>

<h2>Configuraci√≥n de entradas y salidas</h2>
<p>Se utilizar√°n algunos pines del puerto A y del Puerto B. La siguiente tabla muestra a detalle los bits utilizados por el programa:</p>

<table class="table table-striped table-hover">
  <thead>
    <tr>
      <th>Bit</th>
      <th style="text-align: center">Funci√≥n</th>
      <th style="text-align: center">Descripci√≥n</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>RA0</td>
      <td style="text-align: center">Entrada</td>
      <td style="text-align: center">Posici√≥n <em>menos</em> significativa del n√∫mero</td>
    </tr>
    <tr>
      <td>RA1</td>
      <td style="text-align: center">Entrada</td>
      <td style="text-align: center">Siguiente posici√≥n del n√∫mero</td>
    </tr>
    <tr>
      <td>RA2</td>
      <td style="text-align: center">Entrada</td>
      <td style="text-align: center">Siguiente posici√≥n del n√∫mero</td>
    </tr>
    <tr>
      <td>RA0</td>
      <td style="text-align: center">Entrada</td>
      <td style="text-align: center">Posici√≥n <em>m√°s</em> significativa del n√∫mero</td>
    </tr>
    <tr>
      <td>RB0</td>
      <td style="text-align: center">Salida</td>
      <td style="text-align: center">Indicador de la condici√≥n 1</td>
    </tr>
    <tr>
      <td>RB1</td>
      <td style="text-align: center">Salida</td>
      <td style="text-align: center">Indicador de la condici√≥n 2</td>
    </tr>
    <tr>
      <td>RB2</td>
      <td style="text-align: center">Salida</td>
      <td style="text-align: center">Indicador de la condici√≥n 3</td>
    </tr>
    <tr>
      <td>RB3</td>
      <td style="text-align: center">Salida</td>
      <td style="text-align: center">Indicador de la condici√≥n 4</td>
    </tr>
  </tbody>
</table>

<h2>Diagrama el√©ctrico</h2>
<p>El diagrama del circuito respectivo es el que se muestra a continuaci√≥n:</p>
<center>
  <figure>
    <img src="../assets/images/Post02/circuit.png" alt="Circuito de implementaci√≥n" width="960" />
    <figcaption>
      Figura 1: Circuito el√©ctrico.
    </figcaption>
  </figure>
</center>

<h2>Diagrama de flujo</h2>
<p>El diagrama de flujo de la implementaci√≥n se encuentra divido en cinco partes, la primera corresponde al <em>programa principal</em>, mientras que las restantes hacen referencia a cada una de las subrutinas para las comparaciones.</p>
<center>
  <figure>
    <img src="../assets/images/Post02/main.png" alt="diagrama de flujo principal" width="250" />
    <figcaption>
      Figura 2: Diagrama de flujo de la rutina principal
    </figcaption>
  </figure>
</center>
<p><br /></p>
<center>
  <figure>
    <img src="../assets/images/Post02/N9.png" alt="Comparaci√≥n con la condici√≥n: n√∫mero == 9" width="200" />
    <figcaption>
      Figura 3: Comparaci√≥n con la condici√≥n: n√∫mero == 9
    </figcaption>
  </figure>
</center>
<p><br /></p>
<center>
  <figure>
    <img src="../assets/images/Post02/N12.png" alt="Comparaci√≥n con la condici√≥n: n√∫mero &gt; 12" width="200" />
    <figcaption>
      Figura 4: Comparaci√≥n con la condici√≥n: n√∫mero &gt; 12
    </figcaption>
  </figure>
</center>
<p><br /></p>
<center>
  <figure>
    <img src="../assets/images/Post02/N5.png" alt="Comparaci√≥n con la condici√≥n: n√∫mero &lt; 5" width="200" />
    <figcaption>
      Figura 5: Comparaci√≥n con la condici√≥n: n√∫mero &lt; 5
      </figcaption>
  </figure>
</center>
<p><br /></p>
<center>
  <figure>
    <img src="../assets/images/Post02/N3N8.png" alt="Comparaci√≥n con la condici√≥n: 3 &lt;= n√∫mero &lt;=8" width="200" />
    <figcaption>
      Figura 6: Comparaci√≥n con la condici√≥n: 3 &lt;= n√∫mero &lt;=8
      </figcaption>
  </figure>
</center>
<p><br /></p>

<h2>Programa</h2>
<p>El c√≥digo en lenguage ensamblador es el siguiente:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
</pre></td><td class="rouge-code"><pre>#include "p16f886.inc"
; CONFIG1
; __config 0xEFE5
  __CONFIG _CONFIG1, _FOSC_INTRC_CLKOUT &amp; _WDTE_OFF &amp; _PWRTE_ON &amp; _MCLRE_ON  &amp; _CP_OFF &amp; _CPD_OFF &amp; _BOREN_ON &amp; _IESO_ON &amp; _FCMEN_ON &amp; _LVP_OFF
; CONFIG2
; __config 0xFFFF
  __CONFIG _CONFIG2, _BOR4V_BOR40V &amp; _WRT_OFF
; TODO PLACE VARIABLE DEFINITIONS GO HERE
porta	EQU	05
trisa	EQU	85
ansel	EQU	188
portb	EQU	06
trisb	EQU	86
status	EQU	03
c	EQU	00
z	EQU	02
rp0	EQU	05
rp1	EQU	06
ra0	EQU	00
ra1	EQU	01
ra2	EQU	02
ra3	EQU	03
rb0	EQU	00
rb1	EQU	01
rb2	EQU	02
rb3	EQU	03
numero	EQU	20
;****************************************************************************
; Reset Vector
;****************************************************************************
RES_VECT  CODE    0x0000            ; processor reset vector
  GOTO    START                   ; go to beginning of program
;***************************************************************************
; MAIN PROGRAM
;***************************************************************************
MAIN_PROG CODE                      ; let linker place main program
START
  ; TODO Step #5 - Insert Your Program Here
  bsf     status,rp0    ;move to bank 3
  bsf     status,rp1    ;move to bank 3
  clrf    ansel         ;PORTA as digital I/O
  bsf     status,rp0    ;move to bank 1
  bcf     status,rp1    ;move to bank 1
  MOVLW   b'11111111'   ;configure porta as input
  MOVWF   trisa
  MOVLW   b'00000000'   ;configure portb as output
  MOVWF   trisb
  BCF     status,rp0    ;move to bank 0
  BCF     status,rp1    ;move to bank 0
  CLRF    porta
  CLRF    portb
MAIN
  MOVF    porta,w
  MOVWF   numero
  CALL    N9
  CALL    N12
  CALL    N5
  CALL    N3N8
  GOTO    MAIN
N9
  MOVLW   d'9'
  SUBWF   numero,W
  BTFSS   status,z
  GOTO    LED9OFF
  BSF     portb,rb0
  RETURN
LED9OFF
  BCF     portb,rb0
  RETURN    
N12  
  MOVLW   d'12'
  SUBWF   numero,w
  BTFSC   status,z
  GOTO    LED12OFF
  BTFSS   status,c
  GOTO    LED12OFF
  BSF     portb,rb1
  RETURN
LED12OFF
  BCF     portb,rb1
  RETURN   
N5
  MOVLW   d'5'
  SUBWF   numero,w
  BTFSC   status,c
  GOTO    LED5OFF
  BSF     portb,rb2
  RETURN
LED5OFF
BCF     portb,rb2
RETURN    
N3N8
  MOVLW   d'3'
  SUBWF   numero,w
  BTFSS   status,c
  GOTO    LED38OFF
  MOVLW   d'8'
  SUBWF   numero,w
  BTFSC   status,z
  GOTO    LED38ON
  BTFSC   status,c
  GOTO    LED38OFF
  GOTO    LED38ON
LED38OFF
  BCF     portb,rb3
  RETURN
LED38ON
  BSF     portb,rb3
  RETURN
END
</pre></td></tr></tbody></table></code></pre></div></div>
:ET