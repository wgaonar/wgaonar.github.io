I"˙X<p align="center">
Pink spool icon made by <a href="https://www.flaticon.com/authors/iconixar" title="iconixar">iconixar</a> from <a href="https://www.flaticon.com/" title="Flaticon">www.flaticon.com</a>
</p>

<p>In this post, I show how to drive a DC Motor from the keyboard using the BeagleBone and the <a href="https://toshiba.semicon-storage.com/ap-en/semiconductor/product/motor-driver-ics/brushed-dc-motor-driver-ics/detail.TB6612FNG.html">TB6612FNG</a> driver from Toshiba.</p>

<p>The remarkable aspect is the use of <font color="red">threads</font> to drive the motor, an aspect that lets the program does some other things at the same time that the motor is running. In the <a href="/Post37-BeagleBone_TB6612FNG_Drive/"> first entry</a> dedicated to this driver, you can read about how to drive a motor with it.</p>

<p>It is important to remember that the logic voltage for the BeagleBone is <font color="red">3.3V</font>. If the user provides a greater voltage, the BeagleBone could be damaged.</p>

<h2 id="circuit-and-components">Circuit and components</h2>

<p>The circuit can be seen in Figure 1. It consists of a TB6612FNG driver, a low voltage DC Motor, 4 AA batteries, and the BeagleBone.</p>

<figure style="text-align: center; 
              margin-left: auto; 
              margin-right: auto;">
    <img src="../assets/images/Post39/Circuit.png" alt="circuit.png" width="100%" />
  <figcaption>
    Figure 1: Circuit to drive a DC motor with the TB6612FNG driver.
  </figcaption>
</figure>

<p>The components are:</p>
<ul>
  <li>1 DC Motor driver TB6612FNG</li>
  <li>1 DC Motor 3.0 - 6.0V</li>
  <li>4 AA Batteries</li>
  <li>1 Protoboard mini</li>
  <li>Jumpers male-male to make the connections</li>
</ul>

<p>The pins used for control the motor are:</p>
<ul>
  <li>GPIO <strong>P8_12</strong> and <strong>P8_14</strong> to control the motor rotation direction</li>
  <li>PWM <strong>P8_13</strong> to control the speed</li>
  <li>GPIO <strong>P8_16</strong> to activate / deactivate de driver</li>
</ul>

<h2 id="coding">Coding</h2>

<p>First, some <code class="language-plaintext highlighter-rouge">GPIO</code> and <code class="language-plaintext highlighter-rouge">TB6612FNG</code> objects are declared with global scope to initialize the digital pin to activate/deactivate the driver, the control pins, and the Motor that will be driven. These <code class="language-plaintext highlighter-rouge">GPIO</code> objects are used as the parameters to construct the <code class="language-plaintext highlighter-rouge">TB6612FNG</code> object.</p>

<p>Remember that the user can include a boolean initialization parameter <code class="language-plaintext highlighter-rouge">true/false</code> to invert by software the motor rotation direction instead of inverting the motor‚Äôs jumpers physically.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="c1">// Declare the pin to activate / deactivate the TB6612FNG module</span>
<span class="n">GPIO</span> <span class="nf">standByPin</span><span class="p">(</span><span class="n">P8_16</span><span class="p">);</span>

<span class="c1">// Declaring the pins for motor</span>
<span class="n">GPIO</span> <span class="nf">AIN1</span> <span class="p">(</span><span class="n">P8_12</span><span class="p">);</span>
<span class="n">GPIO</span> <span class="nf">AIN2</span> <span class="p">(</span><span class="n">P8_14</span><span class="p">);</span>
<span class="n">PWM</span> <span class="nf">PWMA</span> <span class="p">(</span><span class="n">P8_13</span><span class="p">);</span>

<span class="c1">// Declare the motor object</span>
<span class="n">TB6612FNG</span> <span class="nf">MotorA</span> <span class="p">(</span><span class="n">AIN1</span><span class="p">,</span> <span class="n">AIN2</span><span class="p">,</span> <span class="n">PWMA</span><span class="p">,</span> <span class="nb">false</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>The first thing to do is to activate the TB6612FNG driver. This can be done with the next line:</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="c1">// Activate the module</span>
<span class="n">ActivateTB6612FNG</span><span class="p">(</span><span class="n">standByPin</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>In this code, the method <code class="language-plaintext highlighter-rouge">DriveThread()</code> is used to create a thread each time the motor is driven. These threads will be store in a <code class="language-plaintext highlighter-rouge">vector</code> of threads inside the code. This method is shown in the next listing:</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="cm">/*
  Public method to drive the motor during a certain time inside a thread
  @param int: the desired speed (-100,100)
  @param int: The desired duration in milliseconds
  @param ACTION: Confirm to brake / stop / Nothing the motor after driving it.    
*/</span>
<span class="kt">void</span> <span class="n">TB6612FNG</span><span class="o">::</span><span class="n">DriveThread</span><span class="p">(</span><span class="kt">int</span> <span class="n">speed</span><span class="p">,</span> <span class="kt">int</span> <span class="n">duration</span><span class="p">,</span> <span class="n">ACTION</span> <span class="n">action</span><span class="p">)</span>
<span class="p">{</span>
  <span class="n">std</span><span class="o">::</span><span class="kr">thread</span> <span class="n">motorThread</span> <span class="o">=</span> <span class="n">std</span><span class="o">::</span><span class="kr">thread</span><span class="p">(</span><span class="o">&amp;</span><span class="n">TB6612FNG</span><span class="o">::</span><span class="n">MakeDriveThread</span><span class="p">,</span> <span class="k">this</span><span class="p">,</span> <span class="n">speed</span><span class="p">,</span> <span class="n">duration</span><span class="p">,</span> <span class="n">action</span><span class="p">);</span>
  <span class="n">vectorDriveThreads</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">std</span><span class="o">::</span><span class="n">move</span><span class="p">(</span><span class="n">motorThread</span><span class="p">));</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>The method <code class="language-plaintext highlighter-rouge">MakeDriveThread()</code> takes each thread and calls the method <code class="language-plaintext highlighter-rouge">Drive()</code> to drive the motor during a certain time and <code class="language-plaintext highlighter-rouge">stop</code> or <code class="language-plaintext highlighter-rouge">brake</code> this after the movement. This method is:</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="cm">/*
  Private method that contains the routine to drive 
  the motor during a certain time
  @param int: the desired speed (-100,100)  
*/</span>
<span class="kt">void</span> <span class="n">TB6612FNG</span><span class="o">::</span><span class="n">MakeDriveThread</span><span class="p">(</span><span class="kt">int</span> <span class="n">speed</span><span class="p">,</span> <span class="kt">int</span> <span class="n">duration</span><span class="p">,</span> <span class="n">ACTION</span> <span class="n">action</span><span class="p">)</span>
<span class="p">{</span>
  <span class="n">Drive</span><span class="p">(</span><span class="n">speed</span><span class="p">,</span> <span class="n">duration</span><span class="p">,</span> <span class="n">action</span><span class="p">);</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>On the other hand, in the implementation, the user can change the motor speed using the key ‚ÄúW‚Äù and ‚ÄúS‚Äù to increase or decrease it, respectively. The library does not let to set a speed beyond the limits of 100 and -100. If the user presses the key ‚ÄúY‚Äù, the program finishes. Immediately, the method <code class="language-plaintext highlighter-rouge">DriveThread()</code> is used to create a thread each time the motor is driven. These threads will be store in a <code class="language-plaintext highlighter-rouge">vector</code> of threads inside the code. While the motor is running, a message will be printed on the screen 100 times.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
</pre></td><td class="rouge-code"><pre><span class="c1">// Drive the motors and printing messages on the terminal</span>
<span class="k">switch</span> <span class="p">(</span><span class="n">userInput</span><span class="p">)</span>
<span class="p">{</span>
<span class="k">case</span> <span class="sc">'w'</span><span class="p">:</span>
  <span class="n">motorSpeed</span> <span class="o">+=</span> <span class="mi">10</span><span class="p">;</span>
  <span class="n">MotorA</span><span class="p">.</span><span class="n">DriveThread</span><span class="p">(</span><span class="n">motorSpeed</span><span class="p">,</span><span class="mi">5000</span><span class="p">,</span> <span class="n">stop</span><span class="p">);</span>
  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Doing something else while the motor is running"</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
  <span class="k">break</span><span class="p">;</span>
<span class="k">case</span> <span class="sc">'s'</span><span class="p">:</span>
  <span class="n">motorSpeed</span> <span class="o">-=</span> <span class="mi">10</span><span class="p">;</span>
  <span class="n">MotorA</span><span class="p">.</span><span class="n">DriveThread</span><span class="p">(</span><span class="n">motorSpeed</span><span class="p">,</span><span class="mi">5000</span><span class="p">,</span> <span class="n">stop</span><span class="p">);</span>
  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Doing something else while the motor is running"</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
  <span class="k">break</span><span class="p">;</span>
<span class="nl">default:</span>
  <span class="k">break</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>The instruction to move the motors is <code class="language-plaintext highlighter-rouge">MotorA.DriveThread(motorSpeed,5000,stop)</code>. It creates the thread and calls the <code class="language-plaintext highlighter-rouge">Drive()</code> method to drive the motor for 5 seconds at the desired speed and stops it after the movement.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre>  <span class="c1">// Move the motor</span>
  <span class="n">MotorA</span><span class="p">.</span><span class="n">DriveThread</span><span class="p">(</span><span class="n">motorSpeed</span><span class="p">,</span><span class="mi">5000</span><span class="p">,</span> <span class="n">stop</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Finally, the TB6612FNG has to be deactivated using the next line.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="c1">// Deactivate the module</span>
<span class="n">DeactivateTB6612FNG</span><span class="p">(</span><span class="n">standByPin</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>The complete code for this application using a <code class="language-plaintext highlighter-rouge">while loop</code> to drive the motor increasing and decreasing the speed until the user press the key ‚ÄúY‚Äù and printing the messages on the screen. This code is shown in the next listing together with its corresponding execution output.</p>

<h3 id="tb6612fng_13cpp">TB6612FNG_1.3.cpp</h3>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
</pre></td><td class="rouge-code"><pre><span class="cm">/******************************************************************************
TB6612FNG_1.3.cpp
@wgaonar
03/07/2021
https://github.com/wgaonar/BeagleCPP

- Drive a motor in a thread and printing messages in the terminal at the same 
  time

Class: TB6612FNG
******************************************************************************/</span>
<span class="cp">#include &lt;iostream&gt;
#include "../../../Sources/TB6612FNG.h"
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="c1">// Declare the pin to activate / deactivate the TB6612FNG module</span>
<span class="n">GPIO</span> <span class="nf">standByPin</span><span class="p">(</span><span class="n">P8_16</span><span class="p">);</span>

<span class="c1">// Declaring the pins for motor</span>
<span class="n">GPIO</span> <span class="nf">AIN1</span> <span class="p">(</span><span class="n">P8_12</span><span class="p">);</span>
<span class="n">GPIO</span> <span class="nf">AIN2</span> <span class="p">(</span><span class="n">P8_14</span><span class="p">);</span>
<span class="n">PWM</span> <span class="nf">PWMA</span> <span class="p">(</span><span class="n">P8_13</span><span class="p">);</span>

<span class="c1">// Declare the motor object</span>
<span class="n">TB6612FNG</span> <span class="nf">MotorA</span> <span class="p">(</span><span class="n">AIN1</span><span class="p">,</span> <span class="n">AIN2</span><span class="p">,</span> <span class="n">PWMA</span><span class="p">,</span> <span class="nb">false</span><span class="p">);</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
  <span class="n">string</span> <span class="n">message</span> <span class="o">=</span> <span class="s">"Main program starting here..."</span><span class="p">;</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">RainbowText</span><span class="p">(</span><span class="n">message</span><span class="p">,</span><span class="s">"Blue"</span><span class="p">,</span> <span class="s">"White"</span><span class="p">,</span> <span class="s">"Bold"</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

  <span class="c1">// Activate the module</span>
  <span class="n">ActivateTB6612FNG</span><span class="p">(</span><span class="n">standByPin</span><span class="p">);</span>

  <span class="n">message</span> <span class="o">=</span> <span class="s">"If you want to stop the program, enter 'y' for yes"</span><span class="p">;</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">RainbowText</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="s">"Blue"</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
  <span class="n">message</span> <span class="o">=</span> <span class="s">"Or enter 'w' for increase speed or 's' for decrease it"</span><span class="p">;</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">RainbowText</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="s">"Blue"</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

  <span class="kt">int</span> <span class="n">motorSpeed</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="kt">char</span> <span class="n">userInput</span> <span class="o">=</span> <span class="sc">'\0'</span><span class="p">;</span>
  <span class="k">while</span> <span class="p">(</span><span class="n">userInput</span> <span class="o">!=</span> <span class="sc">'y'</span><span class="p">)</span>
  <span class="p">{</span>
    <span class="n">message</span> <span class="o">=</span> <span class="s">"Enter an option 'y', 'w', 's': "</span><span class="p">;</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">RainbowText</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="s">"Blue"</span><span class="p">);</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">userInput</span><span class="p">;</span>

    <span class="c1">// Drive the motors and printing messages on the terminal</span>
    <span class="k">switch</span> <span class="p">(</span><span class="n">userInput</span><span class="p">)</span>
    <span class="p">{</span>
    <span class="k">case</span> <span class="sc">'w'</span><span class="p">:</span>
      <span class="n">motorSpeed</span> <span class="o">+=</span> <span class="mi">10</span><span class="p">;</span>
      <span class="n">MotorA</span><span class="p">.</span><span class="n">DriveThread</span><span class="p">(</span><span class="n">motorSpeed</span><span class="p">,</span><span class="mi">5000</span><span class="p">,</span> <span class="n">stop</span><span class="p">);</span>
      <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Doing something else while the motor is running"</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
      <span class="k">break</span><span class="p">;</span>
    <span class="k">case</span> <span class="sc">'s'</span><span class="p">:</span>
      <span class="n">motorSpeed</span> <span class="o">-=</span> <span class="mi">10</span><span class="p">;</span>
      <span class="n">MotorA</span><span class="p">.</span><span class="n">DriveThread</span><span class="p">(</span><span class="n">motorSpeed</span><span class="p">,</span><span class="mi">5000</span><span class="p">,</span> <span class="n">stop</span><span class="p">);</span>
      <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Doing something else while the motor is running"</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
      <span class="k">break</span><span class="p">;</span>
    <span class="nl">default:</span>
      <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="c1">// Deactivate the module</span>
  <span class="n">DeactivateTB6612FNG</span><span class="p">(</span><span class="n">standByPin</span><span class="p">);</span>  

  <span class="n">message</span> <span class="o">=</span> <span class="s">"Main program finishes here..."</span><span class="p">;</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">RainbowText</span><span class="p">(</span><span class="n">message</span><span class="p">,</span><span class="s">"Blue"</span><span class="p">,</span> <span class="s">"White"</span><span class="p">,</span><span class="s">"Bold"</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="execution-of-the-program">Execution of the program:</h3>
<figure style="text-align: center; width:100%; 
              margin-left: auto; 
              margin-right: auto;">
  <video width="100%" controls="" poster="../assets/images/Post39/VideoCover-TB6612FNG_1.3.png">
    <source src="../assets/images/Post39/TB6612FNG_1.3.mp4" type="video/mp4" />
  </video>
  <figcaption>
    Video: Execution of the program.
  </figcaption>
</figure>

<p>Se you in the next post.</p>
:ET