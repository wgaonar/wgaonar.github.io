I"j<p>In this post, I show how to drive a DC Motor with the driver <a href="https://www.sparkfun.com/datasheets/Robotics/L298_H_Bridge.pdf">L298N</a> which can drive two DC motors. In practice, this driver can be found in a popular red-colored module that has been designed to make it easy to play and interact with DC motors as this <a href="https://lastminuteengineers.com/l298n-dc-stepper-driver-arduino-tutorial/">tutorial </a> shows.</p>

<p>This module can drive a couple of DC motors in a range of <font color="red">5V to 35V</font>. On the other hand, this uses 3 pins in a 5V logic to control each motor, 2 pins of these are to set the direction of rotation, and the last one to control the speed through PWM. This class is part of a whole library that can be found  <a href="https://github.com/wgaonar/BeagleCPP">here</a>.</p>

<p>One disadvantage of this module is the <font color="red">2V voltage drop</font> due to the internal voltage drop in the switching transistors in the H-Bridge circuit. Furthermore, if we connect a 6V motor, we should provide at least 8V to the power supply terminal so that the motors can spin at their maximum speed.</p>

<p>It is important to remember that the logic voltage for the BeagleBone is <font color="red">3.3V</font>. If the user provides a greater voltage, the BeagleBone could be damaged.</p>

<h2 id="circuit-and-components">Circuit and components</h2>

<p>The circuit can be seen in Figure 1. It consists of a L298N driver module , a low voltage DC Motor, batteries, and the BeagleBone.</p>

<figure style="text-align: center; 
              margin-left: auto; 
              margin-right: auto;">
    <img src="../assets/images/Post49/Circuit.png" alt="circuit.png" width="100%" />
  <figcaption>
    Figure 1: Circuit to drive a DC motor with the L298N driver.
  </figcaption>
</figure>

<p>The components are:</p>
<ul>
  <li>1 DC Motor driver module L298N</li>
  <li>1 DC Motor 5.0 - 6.0V</li>
  <li>4 AA Batteries o 6 AA rechargeable batteries at 1.2V</li>
  <li>1 Protoboard mini</li>
  <li>Jumpers male-male to make the connections</li>
</ul>

<p>The pins used for control the motor are:</p>
<ul>
  <li>GPIO <strong>P8_12</strong> and <strong>P8_14</strong> to control the motor rotation direction</li>
  <li>PWM <strong>P8_13</strong> to control the speed</li>
</ul>

<h2 id="coding">Coding</h2>

<p>First, a <code class="language-plaintext highlighter-rouge">DCMotor</code> object is declared. For that, two <code class="language-plaintext highlighter-rouge">GPIO</code> and one <code class="language-plaintext highlighter-rouge">PWM</code> objects are declared with global scope to initialize the motor that will be driven.</p>

<p>The <code class="language-plaintext highlighter-rouge">GPIO</code>objects are named <code class="language-plaintext highlighter-rouge">AIN1 and AIN2</code>, while the <code class="language-plaintext highlighter-rouge">PWM</code>object is <code class="language-plaintext highlighter-rouge">PWMA</code> and are used to initialize the <code class="language-plaintext highlighter-rouge">DCMotor</code> object named <code class="language-plaintext highlighter-rouge">MotorLeft</code> which contains the methods to set the speed, the spin direction and to drive or stop the DC motor.</p>

<p>In this <code class="language-plaintext highlighter-rouge">DCMotor</code> object, the user can include a fourth boolean initialization parameter <code class="language-plaintext highlighter-rouge">true/false</code> to invert by software the motor direction rotation instead of inverting the motorâ€™s jumpers physically.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="c1">// Declaring the pins for motor</span>
<span class="n">GPIO</span> <span class="nf">AIN1</span> <span class="p">(</span><span class="n">P8_12</span><span class="p">);</span>
<span class="n">GPIO</span> <span class="nf">AIN2</span> <span class="p">(</span><span class="n">P8_14</span><span class="p">);</span>
<span class="n">PWM</span> <span class="nf">PWMA</span> <span class="p">(</span><span class="n">P8_13</span><span class="p">);</span>

<span class="c1">// Declare the motor object</span>
<span class="n">DCMotor</span> <span class="nf">MotorLeft</span> <span class="p">(</span><span class="n">AIN1</span><span class="p">,</span> <span class="n">AIN2</span><span class="p">,</span> <span class="n">PWMA</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>The <code class="language-plaintext highlighter-rouge">DCMotor</code>object constructor is shown in the next listing:</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
</pre></td><td class="rouge-code"><pre><span class="c1">// Overload Constructor</span>
<span class="n">DCMotor</span><span class="o">::</span><span class="n">DCMotor</span> <span class="p">(</span><span class="n">GPIO</span> <span class="n">newInput1Pin</span><span class="p">,</span> 
                  <span class="n">GPIO</span> <span class="n">newInput2Pin</span><span class="p">,</span>
                  <span class="n">PWM</span> <span class="n">newPWMPin</span><span class="p">,</span> 
                  <span class="kt">bool</span> <span class="n">newSwapSpinFlag</span><span class="p">)</span> <span class="o">:</span>
                  <span class="n">input1Pin</span><span class="p">(</span><span class="n">newInput1Pin</span><span class="p">),</span> 
                  <span class="n">input2Pin</span><span class="p">(</span><span class="n">newInput2Pin</span><span class="p">),</span>
                  <span class="n">pwmPin</span><span class="p">(</span><span class="n">newPWMPin</span><span class="p">),</span> 
                  <span class="n">swapSpinFlag</span><span class="p">(</span><span class="n">newSwapSpinFlag</span><span class="p">)</span>
<span class="p">{</span>
  <span class="n">InitMotorPins</span><span class="p">();</span>

  <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">message</span><span class="p">;</span>
  <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">swapString</span> <span class="p">{</span><span class="k">this</span><span class="o">-&gt;</span><span class="n">swapSpinFlag</span> <span class="o">?</span> <span class="s">"True"</span> <span class="o">:</span> <span class="s">"False"</span><span class="p">};</span>
  <span class="n">message</span> <span class="o">=</span> <span class="s">"</span><span class="se">\n</span><span class="s">Motor object with the next parameters / pins was created:</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
            <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="p">(</span><span class="s">"</span><span class="se">\t</span><span class="s">IN1: "</span><span class="p">)</span> <span class="o">+</span> <span class="k">this</span><span class="o">-&gt;</span><span class="n">input1Pin</span><span class="p">.</span><span class="n">GetPinHeaderId</span><span class="p">()</span> <span class="o">+</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span> 
            <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="p">(</span><span class="s">"</span><span class="se">\t</span><span class="s">IN2: "</span><span class="p">)</span> <span class="o">+</span> <span class="k">this</span><span class="o">-&gt;</span><span class="n">input2Pin</span><span class="p">.</span><span class="n">GetPinHeaderId</span><span class="p">()</span> <span class="o">+</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span> 
            <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="p">(</span><span class="s">"</span><span class="se">\t</span><span class="s">PWM: "</span><span class="p">)</span> <span class="o">+</span> <span class="k">this</span><span class="o">-&gt;</span><span class="n">pwmPin</span><span class="p">.</span><span class="n">GetPinHeaderId</span><span class="p">()</span> <span class="o">+</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
            <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="p">(</span><span class="s">"</span><span class="se">\t</span><span class="s">Swap Spin: "</span><span class="p">)</span> <span class="o">+</span> <span class="n">swapString</span> <span class="o">+</span> <span class="s">"</span><span class="se">\n\n</span><span class="s">"</span><span class="p">;</span>
  <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">RainbowText</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="s">"Gray"</span><span class="p">);</span>
<span class="p">}</span>

<span class="c1">// Private method to initialize the Pins</span>
<span class="kt">void</span> <span class="n">DCMotor</span><span class="o">::</span><span class="n">InitMotorPins</span><span class="p">()</span>
<span class="p">{</span>
  <span class="c1">// Set the right modes for the pins</span>
  <span class="n">input1Pin</span><span class="p">.</span><span class="n">SetMode</span><span class="p">(</span><span class="n">OUTPUT</span><span class="p">);</span>
  <span class="n">input2Pin</span><span class="p">.</span><span class="n">SetMode</span><span class="p">(</span><span class="n">OUTPUT</span><span class="p">);</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>This <code class="language-plaintext highlighter-rouge">DCMotor</code> object is used to initialize the <code class="language-plaintext highlighter-rouge">L298N</code> object. This inheritance structure has the goal to encapsulate the corresponding methods for any generic DC motor avoiding repeat code in the <code class="language-plaintext highlighter-rouge">L298N</code> object and focusing on the methods to <strong>drive / brake</strong> the DC motor, and not only one, but the two motors at the same time and in a different direction if it desired.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="c1">// Declare the L298N Module</span>
<span class="n">L298N</span> <span class="nf">myL298NModule</span> <span class="p">(</span><span class="n">MotorLeft</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>The <code class="language-plaintext highlighter-rouge">L298N</code> object constructor is shown in the next listing:</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="rouge-code"><pre><span class="c1">// Overload constructor from DCMotor object for ONLY the MotorA</span>
<span class="n">L298N</span><span class="o">::</span><span class="n">L298N</span> <span class="p">(</span><span class="n">DCMotor</span><span class="o">&amp;</span> <span class="n">newMotorA</span><span class="p">)</span> <span class="o">:</span>
              <span class="n">MotorA</span> <span class="p">(</span><span class="n">newMotorA</span><span class="p">)</span>
<span class="p">{</span>
  <span class="c1">// Set the flags about which motors are used </span>
  <span class="n">motorAisUsed</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
  <span class="n">motorBisUsed</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>

  <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">message</span><span class="p">;</span>
  <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">swapStringMotorA</span> <span class="p">{</span><span class="k">this</span><span class="o">-&gt;</span><span class="n">MotorA</span><span class="p">.</span><span class="n">swapSpinFlag</span> <span class="o">?</span> <span class="s">"True"</span> <span class="o">:</span> <span class="s">"False"</span><span class="p">};</span>
  <span class="n">message</span> <span class="o">=</span> <span class="s">"</span><span class="se">\n</span><span class="s">TB6612FNG driver module with the next components / pins was created and activated:</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
            <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="p">(</span><span class="s">"</span><span class="se">\t</span><span class="s">MotorA:</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span> <span class="o">+</span>
            <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="p">(</span><span class="s">"</span><span class="se">\t\t</span><span class="s">AIN1: "</span><span class="p">)</span> <span class="o">+</span> <span class="k">this</span><span class="o">-&gt;</span><span class="n">MotorA</span><span class="p">.</span><span class="n">input1Pin</span><span class="p">.</span><span class="n">GetPinHeaderId</span><span class="p">()</span> <span class="o">+</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span> 
            <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="p">(</span><span class="s">"</span><span class="se">\t\t</span><span class="s">AIN2: "</span><span class="p">)</span> <span class="o">+</span> <span class="k">this</span><span class="o">-&gt;</span><span class="n">MotorA</span><span class="p">.</span><span class="n">input2Pin</span><span class="p">.</span><span class="n">GetPinHeaderId</span><span class="p">()</span> <span class="o">+</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span> 
            <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="p">(</span><span class="s">"</span><span class="se">\t\t</span><span class="s">PWMA: "</span><span class="p">)</span> <span class="o">+</span> <span class="k">this</span><span class="o">-&gt;</span><span class="n">MotorA</span><span class="p">.</span><span class="n">pwmPin</span><span class="p">.</span><span class="n">GetPinHeaderId</span><span class="p">()</span> <span class="o">+</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
            <span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="p">(</span><span class="s">"</span><span class="se">\t\t</span><span class="s">Swap Spin: "</span><span class="p">)</span> <span class="o">+</span> <span class="n">swapStringMotorA</span> <span class="o">+</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span>
            <span class="s">"</span><span class="se">\n\n</span><span class="s">"</span><span class="p">;</span> 
  <span class="n">std</span><span class="o">::</span><span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">RainbowText</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="s">"Light Red"</span><span class="p">);</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>To make turn the DC motor, the method is <code class="language-plaintext highlighter-rouge">L298N::DCMotor::Drive</code> can be used. This receives two parameters:</p>
<ul>
  <li>Speed in percentage, i.e. integer values between <font color="red">100 and -100</font></li>
  <li>Time of the spin duration in milliseconds</li>
</ul>

<p>A positive speed value sets the motor to turn in the CW direction, while, a negative speed value sets the motor to turn in the CCW direction.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="n">myL298NModule</span><span class="p">.</span><span class="n">MotorA</span><span class="p">.</span><span class="n">Drive</span><span class="p">(</span><span class="n">speed</span><span class="p">,</span><span class="n">duration</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>A <strong>positive</strong> speed value sets the motor to turn in the <strong>CW</strong> direction, while, a <strong>negative</strong> speed value sets the motor to turn in the <strong>CCW</strong> direction.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="c1">// Turn the motor in CW direction</span>
<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">speed</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">speed</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="p">;</span> <span class="n">speed</span> <span class="o">+=</span> <span class="mi">10</span><span class="p">)</span>
  <span class="n">myL298NModule</span><span class="p">.</span><span class="n">MotorA</span><span class="p">.</span><span class="n">Drive</span><span class="p">(</span><span class="n">speed</span><span class="p">,</span><span class="mi">1000</span><span class="p">);</span>
<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">speed</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span> <span class="n">speed</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span> <span class="n">speed</span> <span class="o">-=</span> <span class="mi">10</span><span class="p">)</span>
  <span class="n">myL298NModule</span><span class="p">.</span><span class="n">MotorA</span><span class="p">.</span><span class="n">Drive</span><span class="p">(</span><span class="n">speed</span><span class="p">,</span><span class="mi">1000</span><span class="p">);</span>

<span class="c1">// Turn the motor in CCW direction</span>
<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">speed</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">speed</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">100</span><span class="p">;</span> <span class="n">speed</span> <span class="o">-=</span> <span class="mi">10</span><span class="p">)</span>
  <span class="n">myL298NModule</span><span class="p">.</span><span class="n">MotorA</span><span class="p">.</span><span class="n">Drive</span><span class="p">(</span><span class="n">speed</span><span class="p">,</span><span class="mi">1000</span><span class="p">);</span>
<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">speed</span> <span class="o">=</span> <span class="o">-</span><span class="mi">100</span><span class="p">;</span> <span class="n">speed</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">;</span> <span class="n">speed</span> <span class="o">+=</span> <span class="mi">10</span><span class="p">)</span>
  <span class="n">myL298NModule</span><span class="p">.</span><span class="n">MotorA</span><span class="p">.</span><span class="n">Drive</span><span class="p">(</span><span class="n">speed</span><span class="p">,</span><span class="mi">1000</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>The complete code for this application is shown in the next listing together with its corresponding execution output.</p>

<h3 id="l298n_11cpp">L298N_1.1.cpp</h3>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
</pre></td><td class="rouge-code"><pre><span class="cm">/******************************************************************************
L298N_1.1.cpp
@wgaonar
20/04/2021
https://github.com/wgaonar/BeagleCPP

- Move the motor each 1000 milliseconds increasing the speed 10% 
  each time and then reversing it.
- Move the motor in the other direction each 1000 milliseconds increasing the
  speed 10% and then reversing it.

Class: L298N
******************************************************************************/</span>

<span class="cp">#include &lt;iostream&gt;
#include "../../../Sources/L298N.h"
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="c1">// Declaring the pins for motor</span>
<span class="n">GPIO</span> <span class="nf">AIN1</span> <span class="p">(</span><span class="n">P8_12</span><span class="p">);</span>
<span class="n">GPIO</span> <span class="nf">AIN2</span> <span class="p">(</span><span class="n">P8_14</span><span class="p">);</span>
<span class="n">PWM</span> <span class="nf">PWMA</span> <span class="p">(</span><span class="n">P8_13</span><span class="p">);</span>

<span class="c1">// Declare the motor object</span>
<span class="n">DCMotor</span> <span class="nf">MotorLeft</span> <span class="p">(</span><span class="n">AIN1</span><span class="p">,</span> <span class="n">AIN2</span><span class="p">,</span> <span class="n">PWMA</span><span class="p">);</span>

<span class="c1">// Declare the L298N Module</span>
<span class="n">L298N</span> <span class="nf">myL298NModule</span> <span class="p">(</span><span class="n">MotorLeft</span><span class="p">);</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
  <span class="n">string</span> <span class="n">message</span> <span class="o">=</span> <span class="s">"Main program starting here..."</span><span class="p">;</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">RainbowText</span><span class="p">(</span><span class="n">message</span><span class="p">,</span><span class="s">"Blue"</span><span class="p">,</span> <span class="s">"White"</span><span class="p">,</span> <span class="s">"Bold"</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

  <span class="c1">// Turn the motor in CW direction</span>
  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">speed</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">speed</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="p">;</span> <span class="n">speed</span> <span class="o">+=</span> <span class="mi">10</span><span class="p">)</span>
    <span class="n">myL298NModule</span><span class="p">.</span><span class="n">MotorA</span><span class="p">.</span><span class="n">Drive</span><span class="p">(</span><span class="n">speed</span><span class="p">,</span><span class="mi">1000</span><span class="p">);</span>
  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">speed</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span> <span class="n">speed</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span> <span class="n">speed</span> <span class="o">-=</span> <span class="mi">10</span><span class="p">)</span>
    <span class="n">myL298NModule</span><span class="p">.</span><span class="n">MotorA</span><span class="p">.</span><span class="n">Drive</span><span class="p">(</span><span class="n">speed</span><span class="p">,</span><span class="mi">1000</span><span class="p">);</span>

  <span class="c1">// Turn the motor in CCW direction</span>
  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">speed</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">speed</span> <span class="o">&gt;</span> <span class="o">-</span><span class="mi">100</span><span class="p">;</span> <span class="n">speed</span> <span class="o">-=</span> <span class="mi">10</span><span class="p">)</span>
    <span class="n">myL298NModule</span><span class="p">.</span><span class="n">MotorA</span><span class="p">.</span><span class="n">Drive</span><span class="p">(</span><span class="n">speed</span><span class="p">,</span><span class="mi">1000</span><span class="p">);</span>
  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">speed</span> <span class="o">=</span> <span class="o">-</span><span class="mi">100</span><span class="p">;</span> <span class="n">speed</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">;</span> <span class="n">speed</span> <span class="o">+=</span> <span class="mi">10</span><span class="p">)</span>
    <span class="n">myL298NModule</span><span class="p">.</span><span class="n">MotorA</span><span class="p">.</span><span class="n">Drive</span><span class="p">(</span><span class="n">speed</span><span class="p">,</span><span class="mi">1000</span><span class="p">);</span>

  <span class="n">message</span> <span class="o">=</span> <span class="s">"Main program finishes here..."</span><span class="p">;</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">RainbowText</span><span class="p">(</span><span class="n">message</span><span class="p">,</span><span class="s">"Blue"</span><span class="p">,</span> <span class="s">"White"</span><span class="p">,</span><span class="s">"Bold"</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Se you in the next post.</p>
:ET