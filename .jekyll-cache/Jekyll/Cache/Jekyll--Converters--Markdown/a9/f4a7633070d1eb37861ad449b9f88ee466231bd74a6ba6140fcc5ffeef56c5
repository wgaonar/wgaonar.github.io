I"C5<p>In this post, I start applying the PWM technique to do a light pulse effect on a LED. This is inspired by the work by Sparkfun titled <a href="https://www.sparkfun.com/tutorials/329">Pulse a LED</a>, where the brightness of a LED is changed using a sine wave, instead of a classic ramp or linear function.</p>

<h2 id="circuit-and-components">Circuit and components</h2>

<p>The circuit can be seen in Figure 1. Please keep in mind that the BeagleBone works at <font color="red">3.3V</font> and not 5V like microcontrollers as Arduino. It is so important to avoid damage to the board, especially when you are working with buttons or digital inputs in general.</p>

<p>The components are:</p>
<ul>
  <li>5 Resistor of 1KΩ</li>
  <li>1 LED</li>
  <li>Jumpers male-male to make the connections</li>
</ul>

<figure style="text-align: center; width:70%; 
              margin-left: auto; 
              margin-right: auto;">
    <img src="../assets/images/Post23/Circuit_bb.jpg" alt="Circuit.jpg" width="100%" />
  <figcaption>
    Figure 1: Circuit to Pulse an LED through a sine wave.
  </figcaption>
</figure>

<h2 id="coding">Coding</h2>

<p>First an <code class="language-plaintext highlighter-rouge">PWM</code> class object is declared,  initializing the pin and its period:</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="c1">// Global pwm pin declaration</span>
<span class="n">PWM</span> <span class="nf">pwmWhiteLedPin</span><span class="p">(</span><span class="n">P8_19</span><span class="p">,</span><span class="mi">600000</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>After, a user function is defined. This function changes the duty cycle using a  sine wave on 100 samples in a range of values between 0 and 100. This function uses a flag to stop it when the user presses a specific key.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td><td class="rouge-code"><pre><span class="kt">bool</span> <span class="n">stopPulse</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
<span class="kt">int</span> <span class="nf">PulseLed</span><span class="p">()</span>
<span class="p">{</span>
  <span class="k">while</span> <span class="p">(</span><span class="n">stopPulse</span> <span class="o">==</span> <span class="nb">false</span><span class="p">)</span>
  <span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">float</span> <span class="n">in</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">in</span> <span class="o">&lt;</span> <span class="mf">6.28</span><span class="p">;</span> <span class="n">in</span> <span class="o">+=</span> <span class="mf">0.0628</span><span class="p">)</span>
    <span class="p">{</span>
      <span class="kt">float</span> <span class="n">out</span> <span class="o">=</span> <span class="n">sin</span><span class="p">(</span><span class="n">in</span><span class="p">)</span> <span class="o">*</span> <span class="mi">50</span> <span class="o">+</span> <span class="mi">50</span><span class="p">;</span>
      <span class="n">pwmWhiteLedPin</span><span class="p">.</span><span class="n">SetDutyCycle</span><span class="p">(</span><span class="n">out</span><span class="p">);</span>
      <span class="n">pwmWhiteLedPin</span><span class="p">.</span><span class="n">Delayms</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>In the main code, this <code class="language-plaintext highlighter-rouge">PulseLed()</code> function 
is used and a function pointer argument to the PWM class method 
<code class="language-plaintext highlighter-rouge">DoUserFunction(&amp;)</code> which inside the class
constructs a thread to run this function in parallel with the main program.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
</pre></td><td class="rouge-code"><pre><span class="c1">// Call the function to pulse the LED</span>
<span class="n">pwmWhiteLedPin</span><span class="p">.</span><span class="n">DoUserFunction</span><span class="p">(</span><span class="o">&amp;</span><span class="n">PulseLed</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Finally, the main program is always waiting for the press of “y” key to finish the program  stopping the  <code class="language-plaintext highlighter-rouge">PulseLed()</code> function and setting the true the flag to finish the execution of the <code class="language-plaintext highlighter-rouge">DoUserFunction(&amp;)</code> method.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre><span class="kt">char</span> <span class="n">userInput</span> <span class="o">=</span> <span class="sc">'\0'</span><span class="p">;</span>
<span class="k">while</span> <span class="p">(</span><span class="n">userInput</span> <span class="o">!=</span> <span class="sc">'y'</span><span class="p">)</span>
<span class="p">{</span>
  <span class="n">message</span> <span class="o">=</span> <span class="s">"Do you want to stop the pulse on the led? Enter 'y' for yes: "</span><span class="p">;</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">RainbowText</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="s">"Violet"</span><span class="p">);</span>
  <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">userInput</span><span class="p">;</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">userInput</span> <span class="o">==</span> <span class="sc">'y'</span><span class="p">)</span> 
  <span class="p">{</span>
    <span class="n">stopPulse</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
    <span class="n">pwmWhiteLedPin</span><span class="p">.</span><span class="n">StopUserFunction</span><span class="p">();</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>The complete code for this application is shown in the next listing together with its corresponding execution video.</p>

<h3 id="listing_42">Listing_4.2</h3>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
</pre></td><td class="rouge-code"><pre><span class="cp">#include &lt;iostream&gt;
#include &lt;cmath&gt;
#include "../../Sources/PWM.h"
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="c1">// Global pwm pin declaration</span>
<span class="n">PWM</span> <span class="nf">pwmWhiteLedPin</span><span class="p">(</span><span class="n">P8_19</span><span class="p">,</span><span class="mi">600000</span><span class="p">);</span>

<span class="kt">bool</span> <span class="n">stopPulse</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
<span class="kt">int</span> <span class="nf">PulseLed</span><span class="p">()</span>
<span class="p">{</span>
  <span class="k">while</span> <span class="p">(</span><span class="n">stopPulse</span> <span class="o">==</span> <span class="nb">false</span><span class="p">)</span>
  <span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">float</span> <span class="n">in</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">in</span> <span class="o">&lt;</span> <span class="mf">6.28</span><span class="p">;</span> <span class="n">in</span> <span class="o">+=</span> <span class="mf">0.0628</span><span class="p">)</span>
    <span class="p">{</span>
      <span class="kt">float</span> <span class="n">out</span> <span class="o">=</span> <span class="n">sin</span><span class="p">(</span><span class="n">in</span><span class="p">)</span> <span class="o">*</span> <span class="mi">50</span> <span class="o">+</span> <span class="mi">50</span><span class="p">;</span>
      <span class="n">pwmWhiteLedPin</span><span class="p">.</span><span class="n">SetDutyCycle</span><span class="p">(</span><span class="n">out</span><span class="p">);</span>
      <span class="n">pwmWhiteLedPin</span><span class="p">.</span><span class="n">Delayms</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
  <span class="n">string</span> <span class="n">message</span> <span class="o">=</span> <span class="s">"Main program starting here..."</span><span class="p">;</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">RainbowText</span><span class="p">(</span><span class="n">message</span><span class="p">,</span><span class="s">"Blue"</span><span class="p">,</span> <span class="s">"White"</span><span class="p">,</span> <span class="s">"Bold"</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
  
  <span class="n">message</span> <span class="o">=</span> <span class="s">"Pulse a white led"</span><span class="p">;</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">RainbowText</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="s">"White"</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

  <span class="c1">// Call the function to pulse the LED</span>
  <span class="n">pwmWhiteLedPin</span><span class="p">.</span><span class="n">DoUserFunction</span><span class="p">(</span><span class="o">&amp;</span><span class="n">PulseLed</span><span class="p">);</span>
  
  <span class="kt">char</span> <span class="n">userInput</span> <span class="o">=</span> <span class="sc">'\0'</span><span class="p">;</span>
  <span class="k">while</span> <span class="p">(</span><span class="n">userInput</span> <span class="o">!=</span> <span class="sc">'y'</span><span class="p">)</span>
  <span class="p">{</span>
    <span class="n">message</span> <span class="o">=</span> <span class="s">"Do you want to stop the pulse on the led? Enter 'y' for yes: "</span><span class="p">;</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">RainbowText</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="s">"Violet"</span><span class="p">);</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">userInput</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">userInput</span> <span class="o">==</span> <span class="sc">'y'</span><span class="p">)</span> 
    <span class="p">{</span>
      <span class="n">stopPulse</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
      <span class="n">pwmWhiteLedPin</span><span class="p">.</span><span class="n">StopUserFunction</span><span class="p">();</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="n">message</span> <span class="o">=</span> <span class="s">"Main program finishes here..."</span><span class="p">;</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">RainbowText</span><span class="p">(</span><span class="n">message</span><span class="p">,</span><span class="s">"Blue"</span><span class="p">,</span> <span class="s">"White"</span><span class="p">,</span><span class="s">"Bold"</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="execution-of-the-program">Execution of the program:</h3>
<figure style="text-align: center; width:100%; 
              margin-left: auto; 
              margin-right: auto;">
  <video width="100%" controls="" poster="../assets/images/Post23/VideoCover.png">
    <source src="../assets/images/Post23/Video.mp4" type="video/mp4" />
  </video>
  <figcaption>
    Video: Execution of the program.
  </figcaption>
</figure>

<p>Se you in the next post.</p>
:ET