I"Å;<p>In this post, I use the six PWM pins available on the BeagleBone and show how to work with them in order to control the brightness of six LEDs. Remembering the PWM is a technique that lets us emulate an analog signal in a digital pin. This is done by changing the time that a signal is On in a fixed period of time. The ratio between the time ON and OFF is named duty cycle. The more duty cycle, the more is the ‚Äúanalog‚Äù average voltage measured on the digital pin. In <a href="/Post29-BeagleCPP-Checkpoint/"> this post </a> you can find updated code of the class.</p>

<h2 id="circuit-and-components">Circuit and components</h2>

<p>The circuit can be seen in Figure 1. Please keep in mind that the BeagleBone works at <font color="red">3.3V</font> and not 5V like microcontrollers as Arduino. It is so muy important to avoid damage to the board, especially when you are working with buttons or digital inputs in general.</p>

<p>The components are:</p>
<ul>
  <li>5 Resistors of 1KŒ©</li>
  <li>1 LED</li>
  <li>Jumpers male-male to make the connections</li>
</ul>

<figure style="text-align: center; width:70%; 
              margin-left: auto; 
              margin-right: auto;">
    <img src="../assets/images/Post30/Circuit_bb.jpg" alt="Circuit.jpg" width="100%" />
  <figcaption>
    Figure 1: Circuit to control the brightness of six LEDs through a PWM technique.
  </figcaption>
</figure>

<h2 id="coding">Coding</h2>

<p>First of all, each one of the six <code class="language-plaintext highlighter-rouge">PWM</code> class objects is declared:</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="c1">// Global pwm pin declaration</span>
<span class="n">PWM</span> <span class="nf">pwmBlueLedPin</span><span class="p">(</span><span class="n">P8_13</span><span class="p">);</span>
<span class="n">PWM</span> <span class="nf">pwmWhiteLedPin</span><span class="p">(</span><span class="n">P8_19</span><span class="p">);</span>
<span class="n">PWM</span> <span class="nf">pwmGreenLedPin</span><span class="p">(</span><span class="n">P9_14</span><span class="p">);</span>
<span class="n">PWM</span> <span class="nf">pwmYellowLedPin</span><span class="p">(</span><span class="n">P9_16</span><span class="p">);</span>
<span class="n">PWM</span> <span class="nf">pwmRedLedPin</span><span class="p">(</span><span class="n">P9_21</span><span class="p">);</span>
<span class="n">PWM</span> <span class="nf">pwmBlueLedPin2</span><span class="p">(</span><span class="n">P9_22</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Secondly, a function to do a ‚Äústairs pattern‚Äù is defined. This function takes an argument a <code class="language-plaintext highlighter-rouge">PWM</code> object and makes a cycle increasing the duty cycle from 0 to 100 and after, decreasing it from 100 to 0.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="nf">DoStairs</span><span class="p">(</span><span class="n">PWM</span> <span class="n">pwmPin</span><span class="p">)</span>
<span class="p">{</span>
  <span class="c1">// Make a 'stairs pattern to up' on the Led</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Doing a stairs pattern to up on a Blue Led..."</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">pwmValue</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">pwmValue</span> <span class="o">&lt;=</span> <span class="mi">100</span><span class="p">;</span> <span class="n">pwmValue</span> <span class="o">+=</span> <span class="mi">10</span><span class="p">)</span>
  <span class="p">{</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Setting a duty cycle of: "</span> <span class="o">&lt;&lt;</span> <span class="n">pwmValue</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="n">pwmPin</span><span class="p">.</span><span class="n">SetDutyCycle</span><span class="p">(</span><span class="n">pwmValue</span><span class="p">);</span>
    <span class="n">pwmPin</span><span class="p">.</span><span class="n">Delayms</span><span class="p">(</span><span class="mi">50</span><span class="p">);</span>
  <span class="p">}</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

  <span class="c1">// Make a 'stairs pattern to down' on the Led</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Doing a stairs pattern to down on a Blue Led..."</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">pwmValue</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span> <span class="n">pwmValue</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">pwmValue</span> <span class="o">-=</span> <span class="mi">10</span><span class="p">)</span>
  <span class="p">{</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Setting a duty cycle of: "</span> <span class="o">&lt;&lt;</span> <span class="n">pwmValue</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="n">pwmPin</span><span class="p">.</span><span class="n">SetDutyCycle</span><span class="p">(</span><span class="n">pwmValue</span><span class="p">);</span>
    <span class="n">pwmPin</span><span class="p">.</span><span class="n">Delayms</span><span class="p">(</span><span class="mi">50</span><span class="p">);</span>
  <span class="p">}</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Finally, in the main code the function is called for every PWM pin:</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="n">pDoStairs</span><span class="p">(</span><span class="n">pwmBlueLedPin</span><span class="p">);</span>
<span class="n">DoStairs</span><span class="p">(</span><span class="n">pwmWhiteLedPin</span><span class="p">);</span>
<span class="n">DoStairs</span><span class="p">(</span><span class="n">pwmGreenLedPin</span><span class="p">);</span>
<span class="n">DoStairs</span><span class="p">(</span><span class="n">pwmYellowLedPin</span><span class="p">);</span>
<span class="n">DoStairs</span><span class="p">(</span><span class="n">pwmRedLedPin</span><span class="p">);</span>
<span class="n">DoStairs</span><span class="p">(</span><span class="n">pwmBlueLedPin2</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>The complete code for this application is shown in the next listing together with its corresponding execution video.</p>

<h3 id="listing_42">Listing_4.2</h3>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
</pre></td><td class="rouge-code"><pre><span class="cp">#include &lt;iostream&gt;
#include &lt;cmath&gt;
#include "../../Sources/PWM.h"
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="c1">// Global pwm pin declaration</span>
<span class="n">PWM</span> <span class="nf">pwmBlueLedPin</span><span class="p">(</span><span class="n">P8_13</span><span class="p">);</span>
<span class="n">PWM</span> <span class="nf">pwmWhiteLedPin</span><span class="p">(</span><span class="n">P8_19</span><span class="p">);</span>
<span class="n">PWM</span> <span class="nf">pwmGreenLedPin</span><span class="p">(</span><span class="n">P9_14</span><span class="p">);</span>
<span class="n">PWM</span> <span class="nf">pwmYellowLedPin</span><span class="p">(</span><span class="n">P9_16</span><span class="p">);</span>
<span class="n">PWM</span> <span class="nf">pwmRedLedPin</span><span class="p">(</span><span class="n">P9_21</span><span class="p">);</span>
<span class="n">PWM</span> <span class="nf">pwmBlueLedPin2</span><span class="p">(</span><span class="n">P9_22</span><span class="p">);</span>

<span class="kt">int</span> <span class="nf">DoStairs</span><span class="p">(</span><span class="n">PWM</span> <span class="n">pwmPin</span><span class="p">)</span>
<span class="p">{</span>
  <span class="c1">// Make a 'stairs pattern to up' on the Led</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Doing a stairs pattern to up on a Blue Led..."</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">pwmValue</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">pwmValue</span> <span class="o">&lt;=</span> <span class="mi">100</span><span class="p">;</span> <span class="n">pwmValue</span> <span class="o">+=</span> <span class="mi">10</span><span class="p">)</span>
  <span class="p">{</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Setting a duty cycle of: "</span> <span class="o">&lt;&lt;</span> <span class="n">pwmValue</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="n">pwmPin</span><span class="p">.</span><span class="n">SetDutyCycle</span><span class="p">(</span><span class="n">pwmValue</span><span class="p">);</span>
    <span class="n">pwmPin</span><span class="p">.</span><span class="n">Delayms</span><span class="p">(</span><span class="mi">50</span><span class="p">);</span>
  <span class="p">}</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

  <span class="c1">// Make a 'stairs pattern to down' on the Led</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Doing a stairs pattern to down on a Blue Led..."</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">pwmValue</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span> <span class="n">pwmValue</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">pwmValue</span> <span class="o">-=</span> <span class="mi">10</span><span class="p">)</span>
  <span class="p">{</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Setting a duty cycle of: "</span> <span class="o">&lt;&lt;</span> <span class="n">pwmValue</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="n">pwmPin</span><span class="p">.</span><span class="n">SetDutyCycle</span><span class="p">(</span><span class="n">pwmValue</span><span class="p">);</span>
    <span class="n">pwmPin</span><span class="p">.</span><span class="n">Delayms</span><span class="p">(</span><span class="mi">50</span><span class="p">);</span>
  <span class="p">}</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
  <span class="n">string</span> <span class="n">message</span> <span class="o">=</span> <span class="s">"Main program starting here..."</span><span class="p">;</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">RainbowText</span><span class="p">(</span><span class="n">message</span><span class="p">,</span><span class="s">"Blue"</span><span class="p">,</span> <span class="s">"White"</span><span class="p">,</span> <span class="s">"Bold"</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
  
  <span class="n">DoStairs</span><span class="p">(</span><span class="n">pwmBlueLedPin</span><span class="p">);</span>
  <span class="n">DoStairs</span><span class="p">(</span><span class="n">pwmWhiteLedPin</span><span class="p">);</span>
  <span class="n">DoStairs</span><span class="p">(</span><span class="n">pwmGreenLedPin</span><span class="p">);</span>
  <span class="n">DoStairs</span><span class="p">(</span><span class="n">pwmYellowLedPin</span><span class="p">);</span>
  <span class="n">DoStairs</span><span class="p">(</span><span class="n">pwmRedLedPin</span><span class="p">);</span>
  <span class="n">DoStairs</span><span class="p">(</span><span class="n">pwmBlueLedPin2</span><span class="p">);</span>

  <span class="n">message</span> <span class="o">=</span> <span class="s">"Main program finishes here..."</span><span class="p">;</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">RainbowText</span><span class="p">(</span><span class="n">message</span><span class="p">,</span><span class="s">"Blue"</span><span class="p">,</span> <span class="s">"White"</span><span class="p">,</span><span class="s">"Bold"</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="execution-of-the-programh2">Execution of the program:&lt;/h2&gt;</h3>
<figure style="text-align: center; width:100%; 
              margin-left: auto; 
              margin-right: auto;">
  <video width="100%" controls="" poster="../assets/images/Post30/VideoCover.png">
    <source src="../assets/images/Post30/Video.mp4" type="video/mp4" />
  </video>
  <figcaption>
    Video: Execution of the program.
  </figcaption>
</figure>

<p>Se you in the next post.</p>
:ET