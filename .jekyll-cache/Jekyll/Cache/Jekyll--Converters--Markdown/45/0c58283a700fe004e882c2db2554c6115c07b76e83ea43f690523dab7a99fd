I"²2<p>In this post, I show a simple application to read and analog voltage with the ADC C++ class implementation shown previously in <a href="/Post24-BeagleBone_ADCClass/"> this post</a>. Remembering that the BeagleBone has 7 analog inputs and ADC of 12 bits that let to de user to represent an analog signal within a range of 4096 values. It is important to remember that the reference for analog voltage is <font color="red">1.8V</font>. If the user provides a greater voltage, the BeagleBone could be damaged.</p>

<h2 id="circuit-and-components">Circuit and components</h2>

<p>The circuit can be seen in Figure 1. It consists of a Potentiometer with a power supplied using the analog ground pin <strong>0V</strong> located at the pin <strong>P9_34</strong> and to analog VDD pin at <font color="purple"><b>1.8V</b></font> located at the pin <font color="purple"><b>P9_32</b></font>. Finally, its output is connected to the <strong>P9_39</strong> pin.</p>

<p>The components are:</p>
<ul>
  <li>1 Potentiometer of 200KÎ©</li>
  <li>Jumpers male-male to make the connections</li>
</ul>

<figure style="text-align: center; width:70%; 
              margin-left: auto; 
              margin-right: auto;">
    <img src="../assets/images/Post26/Circuit_bb.jpg" alt="Circuit.jpg" width="100%" />
  <figcaption>
    Figure 1: Circuit to read an analog value from a potentiometer in the BeagleBone
  </figcaption>
</figure>

<h2 id="coding">Coding</h2>

<p>First an <span class="label coding">ADC</span> class object is declared, for example:</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="n">ADC</span> <span class="nf">adcPin</span><span class="p">(</span><span class="n">P9_39</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>A float variable is declared and initialized to store the analog voltage.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="kt">float</span> <span class="n">adcVoltage</span> <span class="o">=</span> <span class="mf">0.0</span><span class="p">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>The voltage values can be obtained through the next class method:</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="n">adcVoltage</span> <span class="o">=</span> <span class="n">adcPin</span><span class="p">.</span><span class="n">ReadVoltage</span><span class="p">();</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>In this case, the readings are taken through a user-defined function that runs on the background from the main program until a key from the keyboard will be pressed. It can be attached to the pin through the next method:</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
</pre></td><td class="rouge-code"><pre><span class="n">adcPin</span><span class="p">.</span><span class="n">DoUserFunction</span><span class="p">(</span><span class="o">&amp;</span><span class="n">AnalogRead</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>This callback type function can be a <span class="code">while loop</span> which reads not only the analog voltage but the digital value too. For example:</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="rouge-code"><pre><span class="kt">int</span> <span class="nf">AnalogRead</span><span class="p">()</span>
<span class="p">{</span>
  <span class="k">while</span> <span class="p">(</span><span class="n">stopAnalogRead</span> <span class="o">==</span> <span class="nb">false</span><span class="p">)</span>
  <span class="p">{</span>
    <span class="n">adcValue</span> <span class="o">=</span> <span class="n">adcPin</span><span class="p">.</span><span class="n">ReadADC</span><span class="p">();</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"ADC value on pin: "</span> <span class="o">&lt;&lt;</span> <span class="n">adcValue</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="n">adcVoltage</span> <span class="o">=</span> <span class="n">adcPin</span><span class="p">.</span><span class="n">ReadVoltage</span><span class="p">();</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Voltage on the pin: "</span> <span class="o">&lt;&lt;</span> <span class="n">adcVoltage</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="n">adcPin</span><span class="p">.</span><span class="n">Delayms</span><span class="p">(</span><span class="mi">100</span><span class="p">);</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>An aspect to take into account is the declaration of global variables in order to make it possible this function works.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="c1">// Global variables</span>
<span class="kt">bool</span> <span class="n">stopAnalogRead</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">adcValue</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kt">float</span> <span class="n">adcVoltage</span> <span class="o">=</span> <span class="mf">0.0</span><span class="p">;</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>The complete code for this application is shown in the next listing together with its corresponding execution video.</p>

<h3 id="listing_52">Listing_5.2</h3>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
</pre></td><td class="rouge-code"><pre><span class="cp">#include &lt;iostream&gt;
#include "../../Sources/ADC.h"
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="c1">// Global ADC pin declaration </span>
<span class="n">ADC</span> <span class="nf">adcPin</span><span class="p">(</span><span class="n">P9_39</span><span class="p">);</span>

<span class="c1">// Global variables</span>
<span class="kt">bool</span> <span class="n">stopAnalogRead</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">adcValue</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kt">float</span> <span class="n">adcVoltage</span> <span class="o">=</span> <span class="mf">0.0</span><span class="p">;</span>
<span class="kt">int</span> <span class="nf">AnalogRead</span><span class="p">()</span>
<span class="p">{</span>
  <span class="k">while</span> <span class="p">(</span><span class="n">stopAnalogRead</span> <span class="o">==</span> <span class="nb">false</span><span class="p">)</span>
  <span class="p">{</span>
    <span class="n">adcValue</span> <span class="o">=</span> <span class="n">adcPin</span><span class="p">.</span><span class="n">ReadADC</span><span class="p">();</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"ADC value on pin: "</span> <span class="o">&lt;&lt;</span> <span class="n">adcValue</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="n">adcVoltage</span> <span class="o">=</span> <span class="n">adcPin</span><span class="p">.</span><span class="n">ReadVoltage</span><span class="p">();</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Voltage on the pin: "</span> <span class="o">&lt;&lt;</span> <span class="n">adcVoltage</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="n">adcPin</span><span class="p">.</span><span class="n">Delayms</span><span class="p">(</span><span class="mi">100</span><span class="p">);</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
  <span class="n">string</span> <span class="n">message</span> <span class="o">=</span> <span class="s">"Main program starting here..."</span><span class="p">;</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">RainbowText</span><span class="p">(</span><span class="n">message</span><span class="p">,</span><span class="s">"Blue"</span><span class="p">,</span> <span class="s">"White"</span><span class="p">,</span> <span class="s">"Bold"</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

  <span class="c1">// Call the function to read the pin</span>
  <span class="n">adcPin</span><span class="p">.</span><span class="n">DoUserFunction</span><span class="p">(</span><span class="o">&amp;</span><span class="n">AnalogRead</span><span class="p">);</span>

  <span class="kt">char</span> <span class="n">userInput</span> <span class="o">=</span> <span class="sc">'\0'</span><span class="p">;</span>
  <span class="k">while</span> <span class="p">(</span><span class="n">userInput</span> <span class="o">!=</span> <span class="sc">'y'</span><span class="p">)</span>
  <span class="p">{</span>
    <span class="n">message</span> <span class="o">=</span> <span class="s">"Do you want to stop the readings on the pin? Enter 'y' for yes: "</span><span class="p">;</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">RainbowText</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="s">"Blue"</span><span class="p">)</span>  <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">userInput</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">userInput</span> <span class="o">==</span> <span class="sc">'y'</span><span class="p">)</span> 
    <span class="p">{</span>
      <span class="n">stopAnalogRead</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
      <span class="n">adcPin</span><span class="p">.</span><span class="n">StopUserFunction</span><span class="p">();</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="n">message</span> <span class="o">=</span> <span class="s">"Main program finishes here..."</span><span class="p">;</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">RainbowText</span><span class="p">(</span><span class="n">message</span><span class="p">,</span><span class="s">"Blue"</span><span class="p">,</span> <span class="s">"White"</span><span class="p">,</span><span class="s">"Bold"</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>

  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="execution-of-the-program">Execution of the program:</h3>
<figure style="text-align: center; width:100%; 
              margin-left: auto; 
              margin-right: auto;">
  <video width="100%" controls="" poster="../assets/images/Post26/VideoCover.png">
    <source src="../assets/images/Post26/Video.mp4" type="video/mp4" />
  </video>
  <figcaption>
    Video: Execution of the program.
  </figcaption>
</figure>

<p>Se you in the next post.</p>
:ET